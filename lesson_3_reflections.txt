When would you want to use a remote repository rather 
than keeping all your work local?

I would want to use a remote repository rather than 
keeping all my work local in instances where I 
work on more than one computer which means it 
wouldn't be convenient to carry all of them around.  
Also, I would use a remote repository when it isn't 
convenient to take my computer with me, say, on a 
vacation.  Finally, I would want to use a local 
repository when I am working with someone else in 
a different location, where again, they don't have 
access to what may be on my computer.

-----------------------------
Why might you want to always pull changes manually 
rather than having Git automatically stay up-to-date 
with your remote repository?

I might want to pull changes manually rather than having
Git automatically stay-up-to-date with the remote repository 
because this way, I am in control of what I pull.  Also, 
if pulling were left to Git to do automatically, there is 
a good chance that such pulling could happen in the middle 
of an edit and this could result in incomplete files, and 
illogical commits

---------------------------
Describe the differences between forks, clones, and branches. 
When would you use one instead of another?

A fork is like a clone of a repository, only that applies to 
github only.  I would use forks when I need to clone a 
repository only on github.

A clone is a copy of a repository that allows someone to 
copy a repository to one's local computer, for instances.  
I would use a clone when I either need to get a copy of a 
repository from github or locally, from another location on 
my computer.

A branch is a copy of a repository at a particular point in 
time, created to enable someone work on it until such a time 
that it is ready to be merged back to the master.  I would 
use a branch when I need to make significant changes to 
what's on the master so that I could keep the master 
pristine until my changes have been confirmed to work, after 
which I would merge with the master.

-------------------------
What is the benefit of having a copy of the last known state of 
the remote stored locally?

The advantage is that should we ever have to work in a place with no 
internet access, we can rest assured that we have a local version 
available that we can run a log, diff, and/or merge on, relative 
to our local, master branch.

-----------------------
How would you collaborate without using Git or GitHub? 
What would be easier, and what would be harder?

Off the top of my head, the only other way I could think 
of collaborating is what used to apply before the advent 
of version control systems - emailing files/folders back 
and forth, uploading files/folders to a server and FTPing, 
or saving files/folders locally and appending my username
to it.  What would be harder, relative to these more 
inferior techniques would be obtaining the history of 
files as well as merging of differences.